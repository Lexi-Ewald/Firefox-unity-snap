
# HG changeset patch
# User Olivier Tilloy <olivier@tilloy.net>
Bug 1789310 - Add an "Ubuntu" token to the UA string when running as a snap on an Ubuntu host

Differential Revision: https://phabricator.services.mozilla.com/D156492

diff --git a/.eslintrc-test-paths.js b/.eslintrc-test-paths.js
--- a/.eslintrc-test-paths.js
+++ b/.eslintrc-test-paths.js
@@ -200,10 +200,11 @@
   "editor/libeditor/tests/",
   "extensions/permissions/test/",
   "layout/base/tests/",
   "layout/style/test/",
   "layout/xul/test/",
+  "netwerk/test/useragent/",
   "parser/htmlparser/tests/mochitest/",
   "security/sandbox/test/",
   "testing/mochitest/baselinecoverage/browser_chrome/",
   "testing/mochitest/tests/python/files/",
   "toolkit/components/alerts/test/",
diff --git a/netwerk/protocol/http/nsHttpHandler.cpp b/netwerk/protocol/http/nsHttpHandler.cpp
--- a/netwerk/protocol/http/nsHttpHandler.cpp
+++ b/netwerk/protocol/http/nsHttpHandler.cpp
@@ -89,10 +89,14 @@
 
 #if defined(XP_UNIX)
 #  include <sys/utsname.h>
 #endif
 
+#if defined(MOZ_WIDGET_GTK)
+#  include "mozilla/WidgetUtilsGtk.h"
+#endif
+
 #if defined(XP_WIN)
 #  include <windows.h>
 #  include "mozilla/WindowsVersion.h"
 #endif
 
@@ -157,10 +161,29 @@
   }
   return std::move(deviceModelId);
 }
 #endif
 
+#ifdef XP_UNIX
+static bool IsRunningUnderUbuntuSnap() {
+#  if defined(MOZ_WIDGET_GTK)
+  if (!widget::IsRunningUnderSnap()) {
+    return false;
+  }
+
+  char version[100];
+  if (PR_GetSystemInfo(PR_SI_RELEASE_BUILD, version, sizeof(version)) ==
+      PR_SUCCESS) {
+    if (strstr(version, "Ubuntu")) {
+      return true;
+    }
+  }
+#  endif
+  return false;
+}
+#endif
+
 //-----------------------------------------------------------------------------
 // nsHttpHandler <public>
 //-----------------------------------------------------------------------------
 
 StaticRefPtr<nsHttpHandler> gHttpHandler;
@@ -825,10 +848,16 @@
       // backwards compatibility in all cases.
       "X11"
 #endif
   );
 
+#ifdef XP_UNIX
+  if (IsRunningUnderUbuntuSnap()) {
+    mPlatform.AppendLiteral("; Ubuntu");
+  }
+#endif
+
 #ifdef ANDROID
   nsCOMPtr<nsIPropertyBag2> infoService =
       do_GetService("@mozilla.org/system-info;1");
   MOZ_ASSERT(infoService, "Could not find a system info service");
   nsresult rv;
diff --git a/netwerk/test/moz.build b/netwerk/test/moz.build
--- a/netwerk/test/moz.build
+++ b/netwerk/test/moz.build
@@ -4,11 +4,15 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 TEST_DIRS += ["httpserver", "gtest", "http3server"]
 
-BROWSER_CHROME_MANIFESTS += ["browser/browser.ini"]
+BROWSER_CHROME_MANIFESTS += [
+    "browser/browser.ini",
+    "useragent/nonsnap.ini",
+    "useragent/snap.ini",
+]
 MOCHITEST_MANIFESTS += ["mochitests/mochitest.ini"]
 
 XPCSHELL_TESTS_MANIFESTS += [
     "unit/xpcshell.ini",
     "unit_ipc/xpcshell.ini",
diff --git a/netwerk/test/useragent/browser_ua_nonsnap.js b/netwerk/test/useragent/browser_ua_nonsnap.js
new file mode 100644
--- /dev/null
+++ b/netwerk/test/useragent/browser_ua_nonsnap.js
@@ -0,0 +1,10 @@
+/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+add_task(function test_ua_nonsnap() {
+  ok(navigator.userAgent.match(/X11; Linux/));
+});
diff --git a/netwerk/test/useragent/browser_ua_snap_ubuntu.js b/netwerk/test/useragent/browser_ua_snap_ubuntu.js
new file mode 100644
--- /dev/null
+++ b/netwerk/test/useragent/browser_ua_snap_ubuntu.js
@@ -0,0 +1,10 @@
+/* -*- indent-tabs-mode: nil; js-indent-level: 2 -*- */
+/* vim: set ts=2 et sw=2 tw=80: */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+"use strict";
+
+add_task(function test_ua_snap_ubuntu() {
+  ok(navigator.userAgent.match(/X11; Ubuntu; Linux/));
+});
diff --git a/netwerk/test/useragent/nonsnap.ini b/netwerk/test/useragent/nonsnap.ini
new file mode 100644
--- /dev/null
+++ b/netwerk/test/useragent/nonsnap.ini
@@ -0,0 +1,4 @@
+[DEFAULT]
+
+[browser_ua_nonsnap.js]
+skip-if = os != "linux"
diff --git a/netwerk/test/useragent/snap.ini b/netwerk/test/useragent/snap.ini
new file mode 100644
--- /dev/null
+++ b/netwerk/test/useragent/snap.ini
@@ -0,0 +1,6 @@
+[DEFAULT]
+environment = SNAP_INSTANCE_NAME=firefox
+
+[browser_ua_snap_ubuntu.js]
+skip-if =
+  os != "linux" || !is_ubuntu
diff --git a/python/mozbuild/mozbuild/mozinfo.py b/python/mozbuild/mozbuild/mozinfo.py
--- a/python/mozbuild/mozbuild/mozinfo.py
+++ b/python/mozbuild/mozbuild/mozinfo.py
@@ -7,10 +7,11 @@
 
 from __future__ import absolute_import, print_function, unicode_literals
 
 import json
 import os
+import platform
 import re
 import six
 
 
 def build_dict(config, env=os.environ):
@@ -143,10 +144,12 @@
         d.get("buildapp", "") == "mobile/android"
         and "MOZ_ANDROID_MIN_SDK_VERSION" in substs
     ):
         d["android_min_sdk"] = substs["MOZ_ANDROID_MIN_SDK_VERSION"]
 
+    d["is_ubuntu"] = "Ubuntu" in platform.version()
+
     if "MOZ_ENABLE_DBUS" in substs:
         d["dbus_enabled"] = bool(substs.get("MOZ_ENABLE_DBUS"))
 
     return d
 
